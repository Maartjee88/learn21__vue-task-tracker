{"remainingRequest":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/src/App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/src/App.vue","mtime":1615470873698},{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgIDxIZWFkZXIgQHRvZ2dsZS1hZGQtdGFzaz0idG9nZ2xlQWRkVGFzayIgOnNob3dBZGRUYXNrPSJzaG93QWRkVGFzayIgdGl0bGU9IlRhc3QgVHJhY2tlciIgLz4KICAgIDxkaXYgdi1zaG93PSJzaG93QWRkVGFzayI+CiAgICAgIDxBZGRUYXNrIEBhZGQtdGFzaz0iYWRkVGFzayIgLz4KICAgIDwvZGl2PgogICAgPFRhc2tzIEB0b2dnbGUtcmVtaW5kZXI9InRvZ2dsZVJlbWluZGVyIiB2LW9uOmRlbGV0ZS10YXNrPSJkZWxldGVUYXNrIiA6dGFza3M9InRhc2tzIiAvPgogIDwvZGl2Pgo="},{"version":3,"sources":["/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/src/App.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACzF,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container\">\n    <Header @toggle-add-task=\"toggleAddTask\" :showAddTask=\"showAddTask\" title=\"Tast Tracker\" />\n    <div v-show=\"showAddTask\">\n      <AddTask @add-task=\"addTask\" />\n    </div>\n    <Tasks @toggle-reminder=\"toggleReminder\" v-on:delete-task=\"deleteTask\" :tasks=\"tasks\" />\n  </div>\n</template>\n\n<script>\n  import Header from './components/Header'\n  import Tasks from './components/Tasks'\n  import AddTask from './components/AddTask'\n\n  export default {\n    name: \"App\",\n    components: {\n      Header,\n      Tasks,\n      AddTask\n    },\n    data() {\n      return {\n        tasks: [],\n        showAddTask: false\n      }\n    },\n    methods: {\n      async addTask(task) {\n        const res = await fetch('api/tasks', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify(task)\n        })\n\n        const data = await res.json()\n        this.tasks = [...this.tasks, data]\n      },\n      async deleteTask(id) {\n        if (confirm('Are you sure?')) {\n          const res = await fetch(`api/tasks/${id}`, {\n            method: 'DELETE'\n          })\n\n          res.status === 200 ? (this.tasks = this.tasks.filter((task) => task.id !== id)) : alert(\n            'Error deleting task')\n        }\n        this.tasks = this.tasks.filter((task) => task.id !== id)\n      },\n\n      async toggleReminder(id) {\n        const taskToToggle = await this.fetchTask(id)\n        const updTask = {...taskToToglle, reminder: !taskToToggle.reminder}\n\n        const res = await fetch(`api/tasks/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify(updTask),\n        })\n\n        const data = await res.json()\n\n        this.tasks = this.tasks.map((task) => task.id === id ? {\n          ...task, reminder: data.reminder\n        } : task) /* Wait what?!  Opzoeken: ...task ! spread across?*/\n      },\n\n      toggleAddTask() {\n        this.showAddTask = !this.showAddTask\n      },\n\n      async fetchTasks() {\n        const res = await fetch('api/tasks')\n\n        const data = await res.json()\n\n        return data\n      },\n\n      async fetchTask(id) {\n        const res = await fetch(`api/tasks/${id}`)\n\n        const data = await res.json()\n\n        return data\n      }\n    },\n\n    async created() {\n      this.tasks = await this.fetchTasks()\n    }\n  };\n</script>\n\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: 'Poppins', sans-serif;\n  }\n\n  .container {\n    max-width: 500px;\n    margin: 30px auto;\n    overflow: auto;\n    min-height: 300px;\n    border: 1px solid teal;\n    padding: 30px;\n    border-radius: 5px;\n  }\n\n  .btn {\n    display: inline-block;\n    background: #000;\n    color: #fff;\n    border: none;\n    padding: 10px 20px;\n    margin: 5px;\n    border-radius: 5px;\n    cursor: pointer;\n    text-decoration: none;\n    font-size: 15px;\n    font-family: inherit;\n  }\n\n  .btn:focus {\n    outline: none;\n  }\n\n  .btn:active {\n    transform: scale(0.98);\n  }\n\n  .btn-block {\n    display: block;\n    width: 100%;\n  }\n</style>\n"]}]}