{"remainingRequest":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/babel-loader/lib/index.js!/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/src/App.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/src/App.vue","mtime":1615470873698},{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/maakra/Documents/GitHub/learn21__vue-task-tracker/task-tracker/src/App.vue"],"names":[],"mappings":";;;;;;;;AAWE,OAAO,MAAP,MAAmB,qBAAnB;AACA,OAAO,KAAP,MAAkB,oBAAlB;AACA,OAAO,OAAP,MAAoB,sBAApB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,KADO;AAEb,EAAA,UAAU,EAAE;AACV,IAAA,MAAM,EAAN,MADU;AAEV,IAAA,KAAK,EAAL,KAFU;AAGV,IAAA,OAAM,EAAN;AAHU,GAFC;AAOb,EAAA,IAPa,kBAON;AACL,WAAO;AACL,MAAA,KAAK,EAAE,EADF;AAEL,MAAA,WAAW,EAAE;AAFR,KAAP;AAID,GAZY;AAab,EAAA,OAAO,EAAE;AACD,IAAA,OADC,mBACO,IADP,EACa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAK,CAAC,WAAD,EAAc;AACnC,kBAAA,MAAM,EAAE,MAD2B;AAEnC,kBAAA,OAAO,EAAE;AACP,oCAAgB;AADT,mBAF0B;AAKnC,kBAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AAL6B,iBAAd,CADL;;AAAA;AACZ,gBAAA,GADY;AAAA;AAAA,uBASC,GAAG,CAAC,IAAJ,EATD;;AAAA;AASZ,gBAAA,IATY;AAUlB,gBAAA,KAAI,CAAC,KAAL,gCAAiB,KAAI,CAAC,KAAtB,IAA6B,IAA7B;;AAVkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWnB,KAZM;AAaD,IAAA,UAbC,sBAaU,EAbV,EAac;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACf,OAAO,CAAC,eAAD,CADQ;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEC,KAAK,qBAAc,EAAd,GAAoB;AACzC,kBAAA,MAAM,EAAE;AADiC,iBAApB,CAFN;;AAAA;AAEX,gBAAA,GAFW;AAMjB,gBAAA,GAAG,CAAC,MAAJ,KAAe,GAAf,GAAsB,MAAI,CAAC,KAAL,GAAa,MAAI,CAAC,KAAL,CAAW,MAAX,CAAkB,UAAC,IAAD;AAAA,yBAAU,IAAI,CAAC,EAAL,KAAY,EAAtB;AAAA,iBAAlB,CAAnC,GAAkF,KAAK,CACrF,qBADqF,CAAvF;;AANiB;AASnB,gBAAA,MAAI,CAAC,KAAL,GAAa,MAAI,CAAC,KAAL,CAAW,MAAX,CAAkB,UAAC,IAAD;AAAA,yBAAU,IAAI,CAAC,EAAL,KAAY,EAAtB;AAAA,iBAAlB,CAAb;;AATmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUpB,KAvBM;AAyBD,IAAA,cAzBC,0BAyBc,EAzBd,EAyBkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,MAAI,CAAC,SAAL,CAAe,EAAf,CADJ;;AAAA;AACjB,gBAAA,YADiB;AAEjB,gBAAA,OAFiB,mCAEH,YAFG;AAEW,kBAAA,QAAQ,EAAE,CAAC,YAAY,CAAC;AAFnC;AAAA;AAAA,uBAIL,KAAK,qBAAc,EAAd,GAAoB;AACzC,kBAAA,MAAM,EAAE,KADiC;AAEzC,kBAAA,OAAO,EAAE;AACP,oCAAgB;AADT,mBAFgC;AAKzC,kBAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,OAAf;AALmC,iBAApB,CAJA;;AAAA;AAIjB,gBAAA,GAJiB;AAAA;AAAA,uBAYJ,GAAG,CAAC,IAAJ,EAZI;;AAAA;AAYjB,gBAAA,IAZiB;AAcvB,gBAAA,MAAI,CAAC,KAAL,GAAa,MAAI,CAAC,KAAL,CAAW,GAAX,CAAe,UAAC,IAAD;AAAA,yBAAU,IAAI,CAAC,EAAL,KAAY,EAAZ,mCACjC,IADiC;AAC3B,oBAAA,QAAQ,EAAE,IAAI,CAAC;AADY,uBAElC,IAFwB;AAAA,iBAAf,CAAb;AAEU;;AAhBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBxB,KA1CM;AA4CP,IAAA,aA5CO,2BA4CS;AACd,WAAK,WAAL,GAAmB,CAAC,KAAK,WAAzB;AACD,KA9CM;AAgDD,IAAA,UAhDC,wBAgDY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACC,KAAK,CAAC,WAAD,CADN;;AAAA;AACX,gBAAA,GADW;AAAA;AAAA,uBAGE,GAAG,CAAC,IAAJ,EAHF;;AAAA;AAGX,gBAAA,IAHW;AAAA,kDAKV,IALU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMlB,KAtDM;AAwDD,IAAA,SAxDC,qBAwDS,EAxDT,EAwDa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAK,qBAAc,EAAd,EADL;;AAAA;AACZ,gBAAA,GADY;AAAA;AAAA,uBAGC,GAAG,CAAC,IAAJ,EAHD;;AAAA;AAGZ,gBAAA,IAHY;AAAA,kDAKX,IALW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMpB;AA9DO,GAbI;AA8EP,EAAA,OA9EO,qBA8EG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACK,MAAI,CAAC,UAAL,EADL;;AAAA;AACd,cAAA,MAAI,CAAC,KADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB;AAhFa,CAAf","sourcesContent":["<template>\n  <div class=\"container\">\n    <Header @toggle-add-task=\"toggleAddTask\" :showAddTask=\"showAddTask\" title=\"Tast Tracker\" />\n    <div v-show=\"showAddTask\">\n      <AddTask @add-task=\"addTask\" />\n    </div>\n    <Tasks @toggle-reminder=\"toggleReminder\" v-on:delete-task=\"deleteTask\" :tasks=\"tasks\" />\n  </div>\n</template>\n\n<script>\n  import Header from './components/Header'\n  import Tasks from './components/Tasks'\n  import AddTask from './components/AddTask'\n\n  export default {\n    name: \"App\",\n    components: {\n      Header,\n      Tasks,\n      AddTask\n    },\n    data() {\n      return {\n        tasks: [],\n        showAddTask: false\n      }\n    },\n    methods: {\n      async addTask(task) {\n        const res = await fetch('api/tasks', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify(task)\n        })\n\n        const data = await res.json()\n        this.tasks = [...this.tasks, data]\n      },\n      async deleteTask(id) {\n        if (confirm('Are you sure?')) {\n          const res = await fetch(`api/tasks/${id}`, {\n            method: 'DELETE'\n          })\n\n          res.status === 200 ? (this.tasks = this.tasks.filter((task) => task.id !== id)) : alert(\n            'Error deleting task')\n        }\n        this.tasks = this.tasks.filter((task) => task.id !== id)\n      },\n\n      async toggleReminder(id) {\n        const taskToToggle = await this.fetchTask(id)\n        const updTask = {...taskToToglle, reminder: !taskToToggle.reminder}\n\n        const res = await fetch(`api/tasks/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify(updTask),\n        })\n\n        const data = await res.json()\n\n        this.tasks = this.tasks.map((task) => task.id === id ? {\n          ...task, reminder: data.reminder\n        } : task) /* Wait what?!  Opzoeken: ...task ! spread across?*/\n      },\n\n      toggleAddTask() {\n        this.showAddTask = !this.showAddTask\n      },\n\n      async fetchTasks() {\n        const res = await fetch('api/tasks')\n\n        const data = await res.json()\n\n        return data\n      },\n\n      async fetchTask(id) {\n        const res = await fetch(`api/tasks/${id}`)\n\n        const data = await res.json()\n\n        return data\n      }\n    },\n\n    async created() {\n      this.tasks = await this.fetchTasks()\n    }\n  };\n</script>\n\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: 'Poppins', sans-serif;\n  }\n\n  .container {\n    max-width: 500px;\n    margin: 30px auto;\n    overflow: auto;\n    min-height: 300px;\n    border: 1px solid teal;\n    padding: 30px;\n    border-radius: 5px;\n  }\n\n  .btn {\n    display: inline-block;\n    background: #000;\n    color: #fff;\n    border: none;\n    padding: 10px 20px;\n    margin: 5px;\n    border-radius: 5px;\n    cursor: pointer;\n    text-decoration: none;\n    font-size: 15px;\n    font-family: inherit;\n  }\n\n  .btn:focus {\n    outline: none;\n  }\n\n  .btn:active {\n    transform: scale(0.98);\n  }\n\n  .btn-block {\n    display: block;\n    width: 100%;\n  }\n</style>\n"],"sourceRoot":""}]}